@using SPCPP.Model.Models
@model PaginaList<Professor>

@{
    ViewData["Title"] = "Listagem de Professores";

}

<div class="text-center" >
    <div class="d-grid gap-2 d-md-flex justify-content-md-start">
    </div>

    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-success" role="alert">
            
            @TempData["MensagemSucesso"]
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        </div>
    }

    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-danger" role="alert">
            @TempData["MensagemErro"]
            <button type="button" class="btn btn-danger btn-sm close-alert" arial-label="Close">X</button>
        </div>
    }

    <h1  class="display-4">PROFESSORES</h1>
    <br />
    <div class="buscar">
    @using (Html.BeginForm("Index", "Professor", FormMethod.Get))
    {
        <p>
            Nome: @Html.TextBox("pesquisar", ViewBag.Filter as string)
            <button type="submit" class="btn btn-info">Buscar</button>
        </p>
    }
    </div>
    <table class="table" id="table-professors" >
        <thead>
            <tr>
                <th scope="col">@Html.ActionLink("Siape", "Index", new { Ordenar = ViewBag.SiapeParm, Filter=ViewBag.Filter })</th>
                <th scope="col">@Html.ActionLink("Nome", "Index", new { Ordenar = ViewBag.CnomeParm, Filter=ViewBag.Filter })</th>
                <th scope="col">@Html.ActionLink("Email", "Index", new { Ordenar = ViewBag.EmailParm, Filter=ViewBag.Filter })</th>
                <th scope="col">@Html.ActionLink("Data Nascimento", "Index", new { Ordenar = ViewBag.Data_NascParm, Filter=ViewBag.Filter })</th>
                <th scope="col">@Html.ActionLink("Data Exoneracao", "Index", new { Ordenar = ViewBag.Data_exoneracaoParm, Filter=ViewBag.Filter })</th>
                <th scope="col">@Html.ActionLink("Data Saida", "Index", new { Ordenar = ViewBag.Data_saidaParm, Filter=ViewBag.Filter })</th>
                <th scope="col">@Html.ActionLink("Data Aposentadoria", "Index", new { Ordenar = ViewBag.Data_aposentadoriaParm , Filter=ViewBag.Filter})</th>
                <th scope="col">@Html.ActionLink("Carga Horária", "Index", new { Ordenar = ViewBag.Carga_atualParm , Filter=ViewBag.Filter})</th>
                <th scope="col">@Html.ActionLink("Status", "Index", new { Ordenar = ViewBag.StatusParm , Filter=ViewBag.Filter})</th>


                <th scope="col"> <a role="button" class="btn btn-primary mb-0 " style="width:9.2rem!important font-size:12px" asp-controller="Professor" asp-action="Create">Novo Professor</a></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                foreach (var professor in Model)
                {
                    <tr>
                        <th scope="row">@professor.siape</th>
                        <td>@professor.Cnome</td>
                        <td>@professor.Email</td>
                        <td>@professor.Data_nasc</td>
                        <td>@professor.Data_exoneracao</td>
                        <td>@professor.Data_saida</td>
                        <td>@professor.Data_aposentadoria</td>
                        <td>@professor.Carga_atual</td>
                        <td>@professor.Status</td>
                        <td>
                            <div>
                                <a role="button" class="btn btn-primary" asp-route-id="@professor.user_id" asp-controller="Professor" asp-action="Editar">Editar</a>
                                <a role="button" class="btn btn-danger" asp-route-id="@professor.user_id" onclick="deletar(@professor.user_id)" >Deletar</a>
                            </div>
                        </td>
                    </tr>
                }
            }


        </tbody>
    </table>
</div>
<div class="paginationn">
    @{
        var anterior = !Model.PaginaAnterior ? "disabled" : "";
        var meio = !Model.ProximaPagina && !Model.PaginaAnterior ? "display:none" : "";
        var proximo = !Model.ProximaPagina ? "disabled" : "";

    }
    <a asp-action="Index" asp-route-pagina="@(Model.PaginaInicial-1)" asp-route-Filter="@(ViewBag.Filter)" asp-route-Ordenar="@(ViewBag.OrdenarPg)" class="btn btn-primary @anterior"> Anterior</a>
    @using (Html.BeginForm("Index", "Professor", FormMethod.Get, new { style = @meio }))
    {

        @Html.TextBox("pagina",null, new { maxlength="3"} )
        <div style="display:none;">
            @Html.TextBox("Filter", ViewBag.Filter as string)
            @Html.TextBox("Ordenar", ViewBag.OrdenarPg as string)
            <input type="submit" />
        </div>

    }
    <a asp-action="Index" asp-route-pagina="@(Model.PaginaInicial+1)" asp-route-Filter="@(ViewBag.Filter)" asp-route-Ordenar="@(ViewBag.OrdenarPg)" class="btn btn-primary @proximo"> Proximo</a>

</div>
<div class="paginationlocation">
    <p>@(Model.PaginaInicial) de @(Model.TotalPaginas)</p>
</div>

<script>

    function deletar(id_user) {

        $.ajax({
            url: '/Professor/Delete',
            method: 'Get',
            data: { id: id_user },
        }).done(function (valido) {
            if (valido.valido) {
                alert('Professor deletado com sucesso!')
                location.reload()
            } else {
                alert('Não foi possivel deletar o Professor!')
            }
        }).fail(function () {
            console.log("Erro2")
        });

    }

</script>